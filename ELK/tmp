   _                               _            _    _ 
\_|_)                             | |          | |  | |
  |     __   __,  , _|_  __,   ,  | |          | |  | |
 _|    /  \_/  | / \_|  /  |  / \_|/ \       _ |/ _ |/ 
(/\___/\__/ \_/|/ \/ |_/\_/|_/ \/ |   |_/    \_/\/\_/\/
              /|                                       
              \|                                       
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
输入配置块
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
输入配置块是 CONF 配置文件内必要的配置块, 主要用于定义日志数据的来源
输入配置块能够内嵌标准输入 (Stdin)/ 日志文件 (File)/ 消息队列 (Kafka)/ 缓存数据库 (Redis) 等常用插件
输入配置块的相应文档见 https://www.elastic.co:

    •  Stdin                                     [                .../guide/en/logstash/6.8/plugins-inputs-stdin.html ]
    •  File                                      [                 .../guide/en/logstash/6.8/plugins-inputs-file.html ]
    •  Kafka                                     [                .../guide/en/logstash/6.8/plugins-inputs-kafka.html ]
    •  RabbitMQ                                  [             .../guide/en/logstash/6.8/plugins-inputs-rabbitmq.html ]
    •  Redis                                     [                .../guide/en/logstash/6.8/plugins-inputs-redis.html ]

输入配置块支持下述通用配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Common Option                                  │ Type    │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ add_field => {}                                │ Hash    │ 向消息事件内添加若干字段
│ id => ""                                       │ String  │ 向消息事件内添加一个固定名称的字段
│ type => ""                                     │ String  │ 向消息事件内添加一个固定名称的字段
│ codec => "line"                                │ Codec   │ 使用按行读取文本的模式从输入配置块内读取数据
│ enable_metric => true                          │ Boolean │ 在输入配置块内启用度量记录的功能特性
│ tags => []                                     │ Array   │ 向消息事件内添加若干标记
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示输入配置块内通用配置项的使用办法
[root ~]# /usr/share/logstash/bin/logstash -e "                                                                       \
input {                                                                                                               \
    stdin {                                                                                                           \
        add_field => {                                                                                                \
            \"foo\" => \"season\"                                                                                     \
        }                                                                                                             \
        id => \"000000\"                                                                                              \
        type => \"demo\"                                                                                              \
        codec => \"line\"                                                                                             \
        tags => [\"spring\", \"summer\", \"autumn\", \"winter\"]                                                      \
    }                                                                                                                 \
}                                                                                                                     \
output {                                                                                                              \
    stdout {                                                                                                          \
        codec => "rubydebug"                                                                                          \
    }                                                                                                                 \
}                                                                                                                     \
"
--------------------------------------------------------------------------------------------------------------------- ✻

输入配置块的消息队列插件 (Kafka) 支持下述个性化配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Kafka Option                                   │ Type    │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ auto_commit_interval_ms => "5000"              │ String  │ 插件默认每 5000ms 从上游队列取一次日志数据
│ bootstrap_servers => "localhost:9092"          │ String  │ 插件默认以 localhost:9092 作为上游队列的服务套接字
│ consumer_threads => 1                          │ Number  │ 插件默认以 1 个线程消费队列的数据, 该值应匹配队列主题的分区数量
│ group_id => "logstash"                         │ String  │ 插件默认使用 logstash 作为队列的消费者标识
│ topics => ["logstash"]                         │ Array   │ 插件默认消费上游队列中的 logstash 主题内的数据
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示输入配置块内消息队列插件的使用办法
[root ~]# cat /etc/logstash/conf.d/foo.conf
input {
    kafka {
        bootstrap_servers => "kafka-0.season.com:9092,kafka-1.season.com:9092,kafka-2.season.com:9092"
        group_id          => "logstash"
        consumer_threads  => 3
        topics            => ["applog"]
    }
}
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
过滤配置块
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
过滤配置块是 CONF 配置文件内可选的配置块, 主要用于处理日志数据的一些特征和指标
过滤配置块能够内嵌日期时间 (Date)/ 域名记录 (DNS)/ 事件解析 (Grok)/ HTTP/ JSON/ Ruby/ CSV/ XML/ 字段合并 (Mutate) 等常用插件
过滤配置块的相应文档见 https://www.elastic.co:

    •  Date                                      [                .../guide/en/logstash/6.8/plugins-filters-date.html ]
    •  DNS                                       [                 .../guide/en/logstash/6.8/plugins-filters-dns.html ]
    •  Grok                                      [                .../guide/en/logstash/6.8/plugins-filters-grok.html ]
    •  HTTP                                      [                .../guide/en/logstash/6.8/plugins-filters-http.html ]
    •  JSON                                      [                .../guide/en/logstash/6.8/plugins-filters-json.html ]
    •  Ruby                                      [                .../guide/en/logstash/6.8/plugins-filters-ruby.html ]
    •  CSV                                       [                 .../guide/en/logstash/6.8/plugins-filters-csv.html ]
    •  XML                                       [                 .../guide/en/logstash/6.8/plugins-filters-xml.html ]
    •  Mutate                                    [              .../guide/en/logstash/6.8/plugins-filters-mutate.html ]

过滤配置块支持下述通用配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Common Option                                  │ Type    │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ add_field => {}                                │ Hash    │ 向消息事件内添加若干字段
│ remove_field => []                             │ Hash    │ 从消息事件内删除若干字段
│ id => ""                                       │ String  │ 向消息事件内添加一个固定名称的字段
│ enable_metric => true                          │ Boolean │ 在输入配置块内启用度量记录的功能特性
│ add_tag => []                                  │ Array   │ 向消息事件内添加若干标记
│ remove_tag => []                               │ Array   │ 从消息事件内删除若干标记
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

过滤配置块的日期时间 (Date) 支持下述个性化配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Date Option                                    │ Type    │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ match => []                                    │ Array   │ 插件默认使用数组的第一个字段匹配其余字段, 命中相应匹配结果
│ target => "@timestamp"                         │ String  │ 插件默认使用 match 配置项的命中结果替换掉 @timestamp 字段的值
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

阅读上述表格时, 还请注意:

    •  日期时间 (Date) 插件诞生于一个特定背景: 业务日志本身附带有时间戳
    •  日期时间 (Date) 插件专门把业务日志本身附带的时间戳提取出来, 替换掉 @timestamp 字段的值, 使得业务日志能够保持自身逻辑顺序

过滤配置块的事件解析 (Grok) 支持下述个性化配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Grok Option                                    │ Type    │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ match => {}                                    │ Hash    │ 
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

过滤配置块内通常内嵌 Grok 配置块用于匹配日志数据, 其中 ELK 官方定义的匹配字段如下
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(https://github.com/logstash-plugins/logstash-patterns-core/blob/main/patterns/ecs-v1/grok-patterns)
┌───────────────────────┬─────────────────────────────────────────────────────────────────────────────────────────────┐
│ Key                   │ Pattern                                                                                     │
├───────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────┤
│ YEAR                  │ (?>\d\d){1,2}                                                                               │
│ MONTHNUM              │ (?:0?[1-9]|1[0-2])                                                                          │
│ MONTHDAY              │ (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])                                                │
│ HOUR                  │ (?:2[0123]|[01]?[0-9])                                                                      │
│ MINUTE                │ (?:[0-5][0-9])                                                                              │
│ SECOND                │ (?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)                                                      │
│ TIME                  │ (?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9])                                          │
│ ISO8601_TIMEZONE      │ (?:Z|[+-]%{HOUR}(?::?%{MINUTE}))                                                            │
│ TIMESTAMP_ISO8601     │ %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?   │
│ USERNAME              │ [a-zA-Z0-9._-]+                                                                             │
│ HOSTNAME              │ \b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)         │
│ EMAILLOCALPART        │ [a-zA-Z0-9!#$%&'*+\-/=?^_`{|}~]{1,64}(?:\.[a-zA-Z0-9!#$%&'*+\-/=?^_`{|}~]{1,62}){0,63}      │
│ EMAILADDRESS          │ %{EMAILLOCALPART}@%{HOSTNAME}                                                               │
│ INT                   │ (?:[+-]?(?:[0-9]+))                                                                         │
│ BASE10NUM             │ (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+)))                              │
│ NUMBER                │ (?:%{BASE10NUM})                                                                            │
│ WORD                  │ \b\w+\b                                                                                     │
│ SPACE                 │ \s*                                                                                         │
│ DATA                  │ .*?                                                                                         │
│ UUID                  │ [A-Fa-f0-9]{8}-(?:[A-Fa-f0-9]{4}-){3}[A-Fa-f0-9]{12}                                        │
│ CISCOMAC              │ (?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})                                                   │
│ WINDOWSMAC            │ (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})                                                    │
│ COMMONMAC             │ (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})                                                    │
│ MAC                   │ (?:%{CISCOMAC}|%{WINDOWSMAC}|%{COMMONMAC})                                                  │
│ UNIXPATH              │ (/[[[:alnum:]]_%!$@:.,+~-]*)+                                                               │
│ WINPATH               │ (?>[A-Za-z]+:|\\)(?:\\[^\\?*]*)+                                                            │
│ PATH                  │ (?:%{UNIXPATH}|%{WINPATH})                                                                  │
│ URIPATH               │ (?:/[A-Za-z0-9$.+!*'(){},~:;=@#%&_\-]*)+                                                    │
│ LOGLEVEL              │                                                                                             │
└───────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────┘



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
输出配置块
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━




━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
条件表达式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
if condition {
    ... ...
} else if condition {
    ... ...
} else {
    ... ...
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
日志管道的过滤/ 输出组件支持使用条件判断语句, 条件判断语句仅支持内嵌配置块
::  if                                           固定的关键字, 标记这是一个条件表达式
::  condition                                    必要的表达式, 支持使用变量, 常量 (布尔值/ 字符串/ 数值), 正则表达式
::  ... ...                                      内嵌的配置块, 条件表达式为真时触发内嵌的配置块执行相应操作

┌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┐
┊                                                                                                                     ┊
┊   INPUT PART {                                                                                                      ┊
┊       ... ...                                                                                                       ┊
┊   }                                                                                                                 ┊
┊                                                                                                                     ┊
┊   FILTER PART {                                                                                                     ┊
┊       IF PART {                                                                                                     ┊
┊           ... ...                                                                                                   ┊
┊       }                                                                                                             ┊
┊       ... ...                                                                                                       ┊
┊   }                                                                                                                 ┊
┊                                                                                                                     ┊
┊   OUTPUT PART {                                                                                                     ┊
┊       IF PART {                                                                                                     ┊
┊           ... ...                                                                                                   ┊
┊       }                                                                                                             ┊
┊       ... ...                                                                                                       ┊
┊   }                                                                                                                 ┊
┊                                                                                                                     ┊
└╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌┘

条件表达式 condition 的常用写作格式如下
::  [KEY] == VALUE                               判断输入配置块的键值是否等于数值/ 字符串 VALUE
::  [KEY] != VALUE                               判断输入配置块的键值是否不等于数值/ 字符串 VALUE
::  [KEY] =~ VALUE                               判断输入配置块的键值能否正则匹配规则 VALUE
::  [KEY] >= VALUE                               判断输入配置块的键值是否大于等于数值 VALUE
::  [KEY] <= VALUE                               判断输入配置块的键值是否小于等于数值 VALUE
::  [KEY] > VALUE                                判断输入配置块的键值是否大于数值 VALUE
::  [KEY] < VALUE                                判断输入配置块的键值是否小于数值 VALUE

""""""""" 演示 /etc/logstash/conf.d/debug.conf 文件的基本配置
[root ~]# cat /etc/logstash/conf.d/debug.conf
input {
    stdin {}
}
filter {
    if [@timestamp] != "" {
        ruby {
            code => "event.set('timestamp', (event.get('@timestamp').time.localtime).strftime('%Y-%m-%d %H:%M:%S.%L'))"
        }
    }
    mutate {
        remove_field => ["@version", "@timestamp", "host"]
    }
}
output {
    if [message] =~ "[a-zA-Z0-9]+" {
        stdout {
            codec => rubydebug {}
        }
    } else {}
}
--------------------------------------------------------------------------------------------------------------------- ✻



