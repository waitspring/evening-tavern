   _                               _            _    _ 
\_|_)                             | |          | |  | |
  |     __   __,  , _|_  __,   ,  | |          | |  | |
 _|    /  \_/  | / \_|  /  |  / \_|/ \       _ |/ _ |/ 
(/\___/\__/ \_/|/ \/ |_/\_/|_/ \/ |   |_/    \_/\/\_/\/
              /|                                       
              \|                                       
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
输入配置块
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
输入配置块是 CONF 配置文件内必要的配置块, 主要用于定义业务日志数据的来源
输入配置块能够内嵌标准输入 (Stdin)/ 日志文件 (File)/ 消息队列 (Kafka)/ 缓存数据库 (Redis) 在内的常用插件
输入配置块的相应文档见 https://www.elastic.co:

    •  Stdin                                     [                .../guide/en/logstash/6.8/plugins-inputs-stdin.html ]
    •  File                                      [                 .../guide/en/logstash/6.8/plugins-inputs-file.html ]
    •  Kafka                                     [                .../guide/en/logstash/6.8/plugins-inputs-kafka.html ]
    •  RabbitMQ                                  [             .../guide/en/logstash/6.8/plugins-inputs-rabbitmq.html ]
    •  Redis                                     [                .../guide/en/logstash/6.8/plugins-inputs-redis.html ]

输入配置块的标准输入插件 (Stdin) 支持下述配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ add_field => {}                                │ Hash    │ 向业务日志数据内添加若干用户自定义的字段
│ id => ""                                       │ String  │ 向业务日志数据内添加一个固定名称字段
│ type => ""                                     │ String  │ 向业务日志数据内添加一个固定名称字段
│ codec => "line"                                │ Codec   │ 使用数据行作为单位, 从输入配置块内读取业务日志数据
│ enable_metric => true                          │ Boolean │ 启用度量记录的功能特性
│ tags => []                                     │ Array   │ 向业务日志数据内添加若干标记
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示输入配置块内通用配置项的使用办法
[root ~]# /usr/share/logstash/bin/logstash -e "                                                                       \
input {                                                                                                               \
    stdin {                                                                                                           \
        add_field => {                                                                                                \
            \"foo\" => \"season\"                                                                                     \
        }                                                                                                             \
        id => \"000000\"                                                                                              \
        type => \"demo\"                                                                                              \
        codec => \"line\"                                                                                             \
        tags => [\"spring\", \"summer\", \"autumn\", \"winter\"]                                                      \
    }                                                                                                                 \
}                                                                                                                     \
output {                                                                                                              \
    stdout {                                                                                                          \
        codec => "rubydebug"                                                                                          \
    }                                                                                                                 \
}"                                                                                                                    \
--------------------------------------------------------------------------------------------------------------------- ✻

输入配置块的消息队列插件 (Kafka) 支持下述配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ auto_commit_interval_ms => "5000"              │ String  │ 插件默认每 5000ms 从上游队列取一次业务日志数据
│ bootstrap_servers => "localhost:9092"          │ String  │ 插件默认以 localhost:9092 作为上游队列的服务套接字
│ consumer_threads => 1                          │ Number  │ 插件默认用 1 个线程从上游队列消费业务日志数据 (应匹配主题分区数量)
│ group_id => "logstash"                         │ String  │ 插件默认用 logstash 作为队列的消费者标识
│ topics => ["logstash"]                         │ Array   │ 插件默认消费上游队列中的 logstash 主题内的数据
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示输入配置块内消息队列插件的使用办法
[root ~]# cat /etc/logstash/conf.d/foo.conf
input {
    kafka {
        bootstrap_servers => "kafka-0.season.com:9092,kafka-1.season.com:9092,kafka-2.season.com:9092"
        group_id          => "logstash"
        consumer_threads  => 3
        topics            => ["applog"]
    }
}
... ...
... ...
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
过滤配置块
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
过滤配置块是 CONF 配置文件内可选的配置块, 主要用于处理业务日志数据的一些特征和指标
过滤配置块能够内嵌日期时间 (Date)/ 域名记录 (DNS)/ 事件解析 (Grok)/ HTTP/ JSON/ Ruby/ CSV/ XML/ 字段合并 (Mutate) 等常用插件
过滤配置块的相应文档见 https://www.elastic.co:

    •  Date                                      [                .../guide/en/logstash/6.8/plugins-filters-date.html ]
    •  DNS                                       [                 .../guide/en/logstash/6.8/plugins-filters-dns.html ]
    •  Grok                                      [                .../guide/en/logstash/6.8/plugins-filters-grok.html ]
    •  HTTP                                      [                .../guide/en/logstash/6.8/plugins-filters-http.html ]
    •  JSON                                      [                .../guide/en/logstash/6.8/plugins-filters-json.html ]
    •  Ruby                                      [                .../guide/en/logstash/6.8/plugins-filters-ruby.html ]
    •  CSV                                       [                 .../guide/en/logstash/6.8/plugins-filters-csv.html ]
    •  XML                                       [                 .../guide/en/logstash/6.8/plugins-filters-xml.html ]
    •  Mutate                                    [              .../guide/en/logstash/6.8/plugins-filters-mutate.html ]

过滤配置块的事件解析 (Grok) 支持下述配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ match => {}                                    │ Hash    │ 编写业务日志数据的匹配规则
│ overwrite => []                                │ Array   │ 填写需要在业务日志数据的匹配过程中被复用的字段
│ tag_on_failure => ["_grokparsefailure"]        │ Array   │ 若发生业务日志数据匹配失败, 向业务日志数据内添加若干标记
│ tag_on_timeout => "_groktimeout"               │ String  │ 若发生业务日志数据匹配超时, 向业务日志数据内添加固定标记
│ timeout_millis => 30000                        │ Number  │ 匹配业务日志数据的默认超时时间为 300 毫秒
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

过滤配置块的日期时间 (Date) 支持下述配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ match => []                                    │ Array   │ 插件默认使用数组的第一个字段匹配其余字段, 命中相应匹配结果
│ target => "@timestamp"                         │ String  │ 插件默认使用 match 配置项的命中结果替换掉 @timestamp 字段的值
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

阅读上述表格时, 还请注意:

    •  日期时间 (Date) 插件诞生于一个特定背景: 业务日志数据本身附带有时间戳
    •  日期时间 (Date) 插件专门把业务日志数据本身附带的时间戳提取出来, 替换掉 @timestamp 字段的值, 使得业务日志数据保持自身逻辑顺序

过滤配置块的字段合并插件 (Mutate) 支持下述配置项
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ add_field => {}                                │ Hash    │ 向业务日志数据内添加若干用户自定义的字段
│ remove_field => []                             │ Hash    │ 从业务日志数据内删除若干字段
│ id => ""                                       │ String  │ 向业务日志数据内添加一个固定名称字段
│ enable_metric => true                          │ Boolean │ 启用度量记录的功能特性
│ add_tag => []                                  │ Array   │ 向业务日志数据内添加若干标记
│ remove_tag => []                               │ Array   │ 从业务日志数据内删除若干标记
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示过滤配置块内事件解析插件 (Grok)/ 日期时间插件 (Date) 的使用办法
output {
    if [message] =~ "[a-zA-Z0-9]+" {
        stdout {
            codec => rubydebug {}
        }
    } else {}
}
--------------------------------------------------------------------------------------------------------------------- ✻








