 ,        _                       
/|   / o | |                      
 |__/    | |   __,   _  _    __,  
 | \   | |/ \_/  |  / |/ |  /  |  
 |  \_/|_/\_/ \_/|_/  |  |_/\_/|_/
                                  
                                  
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Kibana 软件的安装过程
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Kibana 软件的安装途经有:

    •  使用 YUM 源直接安装 (需要单独配置 Elastic Stack 软件仓库的 YUM 源)
    •  使用 RPM 包直接安装 (优先推荐使用 RPM 包直接安装)
    •  使用源码安装, 源码的 TGZ 压缩包可以基于 GitHub/ ELK Stack 社区站点下载
       •  https://github.com/elastic/kibana/releases
       •  https://www.elastic.co/cn/downloads/kibana

Kibana 软件若使用 RPM 包直接安装, 可以得到下述文件
┌────────────────────────────────────────────────┬─────┬───────────────────────────────────────────────────────────────
│ Path                                           │ F/D │ Comment
├────────────────────────────────────────────────┼─────┼───────────────────────────────────────────────────────────────
│ /etc/kibana/kibana.yml                         │  F  │ 软件的主配置文件
│ /etc/init.d/kibana                             │  F  │ 软件的 Initd (RHEL6) 风格的服务单元管理文件
│ /usr/lib/systemd/system/kibana.service         │  F  │ 软件的 Systemd (RHEL7) 风格的服务单元管理文件
│ /usr/share/kibana                              │  D  │ 软件的安装目录
│ /var/lib/kibana                                │  D  │ 软件的数据目录
└────────────────────────────────────────────────┴─────┴───────────────────────────────────────────────────────────────

""""""""" 使用 RPM 包直接安装 Kibana 软件
[root ~]# rpm -ivh /srv/kibana-6.8.23-x86_64.rpm
[root ~]# rpm -qs kibana | grep -v /usr/share/kibana
[root ~]# vim /etc/kibana/kibana.yml
[root ~]# systemctl enable kibana.service
[root ~]# systemctl  start kibana.service
[root ~]# systemctl status kibana.service
[root ~]# curl -I http://kibana.season.com:5601/app/kibana
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Kibana 软件的配置文件
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Kibana 软件的配置文件 /etc/kibana/kibana.yml
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# server.port: 5601                              Kibana 软件的 HTTP 服务监听端口
# server.host: "localhost"                       Kibana 软件的 HTTP 服务监听范围
# elasticsearch.hosts: ["http://localhost:9200"] Kibana 软件的上游索引数据库集群的连接列表
# kibana.index: ".kibana"                        Kibana 软件在上游索引数据库集群内使用固定值作为索引
# pid.file: /var/run/kibana.pid                  Kibana 软件的进程文件工作目录
# logging.timezone: "Asia/Shanghai"              Kibana 软件的日志时区设置
# i18n.locale: "zh-CN"                           Kibana 软件的区域设置, 用于配置前端界面的语言类型
# elasticsearch.username: "username"             Kibana 软件的上游索引数据库集群的认证用户 (配合 X-Pack 模块使用)
# elasticsearch.password: "password"             Kibana 软件的上游索引数据库集群的认证密码 (配合 X-Pack 模块使用)
# xpack.reporting.csv.maxSizeBytes: 10485760     Kibana 软件默认允许导出 10MB 容量的数据到 CSV 文件 (配合 X-Pack 模块使用)
# xpack.reporting.queue.timeout: 120000          Kibana 软件导出数据到 CSV 文件时, 默认 2 分钟超时 (配合 X-Pack 模块使用)

""""""""" 演示 /etc/kibana/kibana.yml 文件的基本配置
[root ~]# cat /etc/kibana/kibana.yml
server.port: 5601
server.host: kibana.season.com
elasticsearch.hosts: [
    "http://elastic-0.season.com:9200",
    "http://elastic-1.season.com:9200",
    "http://elastic-2.season.com:9200"
]
kibana.index: ".kibana"
i18n.locale: "zh-CN"
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
KQL (Kibana Query Language)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
KQL (Kibana Query Language) 数据查询语句通常基于 Kibana 软件的 UI 界面使用
KQL (Kibana Query Language) 数据查询语句使用分词依据如下:

    •  使用空格 ( ) 短横线 (-) 冒号 (:) 正斜杠 (/) 反斜杠 (\) 单引号 (') 双引号 (") 在内的特殊符号作为间隔对被查询的源数据做分词
       同时把点 (.) 下划线 (_) 在内的特殊符号视作为单词的组成部分
    •  使用空格 ( ) 作为间隔对查询的词组做分词, 查询结果为单词的命中匹配结果
    •  使用引号 (') (") 修饰查询的词组时, 词组整体会被视为一个单词, 同时模糊匹配使用的星号 (*) 会因被视为一个常量而失效

简而言之
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
等值匹配 (key0: v0 v1 ...) 能够把 key0 键内含有单词 v0 或(和) v1 或(和) ... 的日志条目筛选出来
等值匹配 (key0: "v0 v1 ...") 能够把 "v0 v1 ..." 视为一个单词, 再把 key0 键内含有单词 "v0 v1 ..." 的日志条目筛选出来
模糊匹配 (key0: v0* v1* ...) 能够把 key0 键内含有 v0* 或(和) v1* 或(和) ... 的日志条目筛选出来
逻辑运算 (key0: v0 and key1: v1) 能够把 key0 键内含有 v0 并且 key1 键内含有 v1 的日志条目筛选出来
逻辑运算 (key0: v0 or key1: v1) 能够把 key0 键内含有 v0 或是 key1 键内含有 v1 的日志条目筛选出来
逻辑运算 (key0: v0 and (not key1: v1)) 能够把 key0 键内含有 v0 并且 key1 键内不包含 v1 的日志条目筛选出来
非法匹配 (key0: "v0 v1" "v2 v3") 单个查询键值对仅允许使用一组等值匹配, 查询条件应当修正为 (key0: "v0 v1" and key0: "v2 v3")

┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│                                                                                                                     │
│   @timestamp: 2021-03-05 11:57:18.111                                                                               │
│   ipaddr: 127.0.0.1                                                                                                 │
│   source: /path/to/dir                                                                                              │
│   topic: foo                                                                                                        │
│   theme: demo                                                                                                       │
│   message: 2021-03-05 11:57:18.111 ERROR [Logger.error] This is error demo                                          │
│           at org.apache.hadoop.util.Shell.checkHadoopHomeInner(Shell.java:448) ~[hadoop-common-2.8.0.jar:?]         │
│           at org.apache.hadoop.util.Shell.checkHadoopHome(Shell.java:419) ~[hadoop-common-2.8.0.jar:?]              │
│           at org.apache.hadoop.util.Shell.<clinit>(Shell.java:496) [hadoop-common-2.8.0.jar:?]                      │
│           at org.apache.hadoop.util.StringUtils.<clinit>(StringUtils.java:79) [hadoop-common-2.8.0.jar:?]           │
│           at org.apache.hadoop.conf.Configuration.getBoolean(Configuration.java:1445) [hadoop-common-2.8.0.jar:?]   │
│           at com.cherrish.hadoop.TestHBase2.init(TestHBase2.java:28) [bin/:?]                                       │
│           at com.cherrish.hadoop.TestHBase2.listTables(TestHBase2.java:107) [bin/:?]                                │
│           at com.cherrish.hadoop.TestHBase2.main(TestHBase2.java:17) [bin/:?]                                       │
│                                                                                                                     │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

等值匹配 message: Logger.error
等值匹配 message: "error demo"
等值匹配 message: "error demo" and message: "This is"
模糊匹配 message: *error
逻辑运算 message: error and theme: demo



