#######################################################################################################################
#                                                                                                                     #
#                                                                 o                                                   #
#                      ,   _   ,_         _   ,_      _   ,_    __    _   _   ,_  _|_     _   ,                       #
#                     / \_|/  /  |  |  |_|/  /  |   |/ \_/  |  /  \_|/ \_|/  /  |  |  |  |/  / \_                     #
#                      \/ |__/   |_/ \/  |__/   |_/o|__/    |_/\__/ |__/ |__/   |_/|_/|_/|__/ \/                      #
#                                                  /|              /|                                                 #
#                                                  \|              \|                                                 #
#######################################################################################################################
#
# 文件位置: /etc/kafka/server.properties
#


# =====================================================================================================================
# 监听/ 注册配置
# =====================================================================================================================
# 配置本地监听
# 配置项 advertised.listeners 禁止使用 0.0.0.0 作为监听地址
advertised.listeners=PLAINTEXT://kafka-0.season.com:9092
# 配置项 listeners 如果使用 0.0.0.0 作为监听地址, 则必须显示指定 advertised.listeners 配置项的值
listeners=PLAINTEXT://0.0.0.0:9092

# 基于主机的实际节点调整 ID 编号, 否则报错:
# org.apache.zookeeper.KeeperException$NodeExistsException: KeeperErrorCode = NodeExists
broker.id=0
# 节点禁止在配置缺失的条件下, 自动生成一个 ID 编号
broker.id.generation.enable=false

# 节点注册到相应的 ZooKeeper 节点
zookeeper.connect=zookeeper-0.season.com:2181,zookeeper-1.season.com:2181,zookeeper-2.season.com:2181/kafka


# =====================================================================================================================
# 数据配置部分
# =====================================================================================================================
# 节点使用 /var/kafka/data 目录寄存业务数据
log.dir=/var/kafka/data
# 节点禁止 ISR 以外的同步副本参与读写副本选举
unclean.leader.election.enable=false
# 节点禁止自动创建主题, 使得生产环境尽可能避免脏数据
auto.create.topics.enable=false
# 节点启用读写副本的自动平衡机制, 使得读写副本不会过度集中到当前节点
auto.leader.rebalance.enable=true
# 节点禁止使用 bin/kafka-topics.sh 工具删除主题, 使得生产环境尽可能保护业务数据
# org.apache.kafka.common.errors.TopicDeletionDisabledException: Topic deletion is disabled
delete.topic.enable=false
# 节点自动创建的主题, 其分区有 3 份副本
default.replication.factor=3
# 节点为偏移量主题创建 1 个分区
offsets.topic.num.partitions=1
# 节点为偏移量主题的每个分区创建 3 份副本
offsets.topic.replication.factor=3
# 按批次读取消息时, 每个批次的最大消息体积为 100MiB
fetch.max.bytes=104857600
