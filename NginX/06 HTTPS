 ,     ______ ______, __      
/|   |(_) |  (_) | /|/  \  () 
 |___|    |      |  |___/  /\ 
 |   |\ _ |    _ |  |     /  \
 |   |/(_/    (_/   |    /(__/
                              
                              
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
HTTPS 证书
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
HTTPS 证书服务的全称是 HTTP SSL 证书服务, 使用数字证书颁发机构 CA 颁发的正版 HTTPS 证书凭证实现
HTTPS 证书服务使用 SSL 协议加密客户端浏览器与网络服务器之间的传输数据, 实现高强度的单向加密传输 (防劫持/ 防监听/ 防篡改)
HTTPS 证书凭证有下述不同类型:

    •  DV 域名型  --  公信等级一般, 多用于个人博客与个人网站, CA 机构不审核组织与企业的真实性
    •  OV 企业型  --  公信等级较好, 多用于社区组织与教育机构, CA 机构要审核组织与企业的真实性
    •  EV 增强型  --  公信等级良好, 多用于政府组织与金融机构与大型商业网站, CA 机构严格审核组织与企业的营业资格与服务资质

HTTPS 证书凭证的颁发机构有
┌────────────────────────────┬───────────────────┬──────────────────────┬──────────────────────┬──────────────────────┐
│ CA                         │ Country           │        DV SSL        │        OV SSL        │        EV SSL        │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ DigiCert (Symantec)        │ America           │          √           │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ GeoTrust                   │ America           │          √           │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ GlobalSign                 │ America           │          √           │          √           │                      │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ CFCA                       │ China             │                      │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ vTrus                      │ China             │          √           │          √           │                      │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ WoSign                     │ China             │          √           │                      │                      │
└────────────────────────────┴───────────────────┴──────────────────────┴──────────────────────┴──────────────────────┘



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PCA 站点
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
正版的 HTTPS 证书凭证仅允许 CA 机构颁发
私用的 HTTPS 证书凭证则使用 PCA (Private CA) 站点颁发, PCA 站点制作的自颁发 HTTPS 证书常见于 OA/ CRM 等局域网服务

PCA 站点的依赖软件包有: openssl.x86_64, openssl-devel.x86_64
PCA 站点的主配置文件为: /etc/pki/tls/openssl.conf
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
... ...
... ...
[ CA_default ]
dir                = /etc/pki/CA                 # 定义 PCA 站点的资源根目录
certs              = $dir/certs                  # 定义 PCA 站点的已颁发 HTTPS 证书的文件保存目录
new_certs_dir      = $dir/newcerts               # 定义 PCA 站点的新签发 HTTPS 证书的文件保存目录
crl                = $dir/crl.pem                # 定义 PCA 站点默认用于吊销 HTTPS 证书的密钥文件
crl_dir            = $dir/crl                    # 定义 PCA 站点的已吊销 HTTPS 证书的文件保存目录
database           = $dir/index.txt              # 定义 PCA 站点的索引文件, 该文件需要人工创建
certificate        = $dir/cacert.pem             # 定义 PCA 站点默认用于颁发 HTTPS 证书的密钥文件
private_key        = $dir/private/cakey.pem      # 定义 PCA 站点默认使用的私钥文件
serial             = $dir/serial                 # 定义 PCA 站点当前使用的序列号
default_days       = 365                         # 定义 PCA 站点的新签发 HTTPS 证书的有效期为 365 个自然天
default_crl_days   = 30                          # 定义 PCA 站点的新签发 HTTPS 证书的前置吊销提示期为 30 个自然天
default_md         = sha256                      # 定义 PCA 站点默认使用的加密算法
... ...
... ...

┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ Doing Simple │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
本示例将演示 HTTPS 自颁发证书的制作办法:

    1. 构建 PCA 站点
    2. 编写 CSR (Certificate Signing Request) 申请文件
    3. 签发 HTTPS 证书

""""""""" 构建 PCA 站点
[root ~]# yum install -y openssl.x86_64, openssl-devel.x86_64
[root ~]# touch /etc/pki/CA/index.txt
[root ~]# echo 01 > /etc/pki/CA/serial
[root ~]# openssl genrsa -out /etc/pki/CA/private/cakey.pem
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 编写 CSR (Certificate Signing Request) 申请文件
[root ~]# openssl req -new \
                      -days 365 \
                      -key /etc/pki/CA/private/cakey.pem \
                      -out /etc/nginx/conf/cert.d/repo.season.com.csr

-----
Country Name [XX]: CN                            | 填写证书申请人的国籍代码, 中国代码为 CN
State/ Province Name (Full Name): Zhejiang       | 填写证书申请人的省份名称
Locality Name [Default City]: Hangzhou           | 填写证书申请人的城市名称
Organization Name [Default Company Ltd]: Season  | 填写证书申请人的单位名称
Organizational Unit Name: Devops                 | 填写证书申请人的部门名称
Common Name: *.season.com                        | 填写证书申请人需要 SSL 加密的域名 (支持申请通配域名)
Email Address: info@season.com                   | 填写证书申请人的邮箱地址

--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 签发 HTTPS 证书
[root ~]# openssl ca -selfsign \
                     -in /etc/nginx/conf/cert.d/repo.season.com.csr
[root ~]# tree /etc/pki/CA
--------------------------------------------------------------------------------------------------------------------- ✻



