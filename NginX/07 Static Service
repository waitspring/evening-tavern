                                                             
  ()             o             ()                o           
  /\_|_  __, _|_     __        /\  _   ,_            __   _  
 /  \|  /  |  |  |  /         /  \|/  /  |  |  |_|  /    |/  
/(__/|_/\_/|_/|_/|_/\___/    /(__/|__/   |_/ \/  |_/\___/|__/
                                                             
                                                             
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
HTTPS 证书
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
HTTPS 证书服务的全称是 HTTP SSL 证书服务, 使用数字证书颁发机构 CA 颁发的正版 HTTPS 证书凭证实现
HTTPS 证书服务使用 SSL 协议加密客户端浏览器与网络服务器之间的传输数据, 实现高强度的单向加密传输 (防劫持/ 防监听/ 防篡改)
HTTPS 证书凭证有下述不同类型:

    •  DV 域名型  --  公信等级一般, 多用于个人博客与个人网站, CA 机构不审核组织与企业的真实性
    •  OV 企业型  --  公信等级较好, 多用于社区组织与教育机构, CA 机构要审核组织与企业的真实性
    •  EV 增强型  --  公信等级良好, 多用于政府组织与金融机构与大型商业网站, CA 机构严格审核组织与企业的营业资格与服务资质

HTTPS 证书凭证的颁发机构有
┌────────────────────────────┬───────────────────┬──────────────────────┬──────────────────────┬──────────────────────┐
│ CA                         │ Country           │        DV SSL        │        OV SSL        │        EV SSL        │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ DigiCert (Symantec)        │ America           │          √           │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ GeoTrust                   │ America           │          √           │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ GlobalSign                 │ America           │          √           │          √           │                      │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ CFCA                       │ China             │                      │          √           │          √           │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ vTrus                      │ China             │          √           │          √           │                      │
├────────────────────────────┼───────────────────┼──────────────────────┼──────────────────────┼──────────────────────┤
│ WoSign                     │ China             │          √           │                      │                      │
└────────────────────────────┴───────────────────┴──────────────────────┴──────────────────────┴──────────────────────┘



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PCA 站点
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
正版的 HTTPS 证书凭证仅允许 CA 机构颁发
私用的 HTTPS 证书凭证则使用 PCA (Private CA) 站点颁发, PCA 站点制作的自颁发 HTTPS 证书常见于 OA/ CRM 等局域网服务

PCA 站点的依赖软件包有: openssl.x86_64, openssl-devel.x86_64
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


















┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│ \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ Doing Simple │
└─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
本示例将演示 HTTPS 自颁发证书的制作办法, 前置依赖软件包有: openssl.x86_64, openssl-devel.x86_64

    1. 构建 PCA (Private CA) 服务, 准备一把企业级私钥文件
    2. 基于企业级私钥文件编写 CSR (Certificate Signing Request) 证书申请文件
    3. 基于 PCA 服务与企业级私钥文件制作自颁发 HTTPS 证书

""""""""" 构建 PCA (Private CA) 服务
[root ~]# yum install -y openssl.x86_64, openssl-devel.x86_64
[root ~]# touch /etc/pki/CA/index.txt
[root ~]# echo 01 > /etc/pki/CA/serial
[root ~]# openssl genrsa -out /etc/pki/CA/private/cakey.pem
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 准备 CSR (Certificate Signing Request) 证书申请文件
[root ~]# mkdir -p /etc/nginx/conf/cert.d
[root ~]# openssl req -new \
                      -days 365 \
                      -key /etc/pki/CA/private/pca.key \
                      -out /etc/nginx/conf/cert.d/repo.season.com.csr

-----
Country Name [XX]: CN                            | 填写证书申请人的国籍代码, 中国代码为 CN
State/ Province Name (Full Name): Zhejiang       | 填写证书申请人的省份名称
Locality Name [Default City]: Hangzhou           | 填写证书申请人的城市名称
Organization Name [Default Company Ltd]: Season  | 填写证书申请人的单位名称
Organizational Unit Name: Devops                 | 填写证书申请人的部门名称
Common Name: *.season.com                        | 填写证书申请人需要 SSL 加密的域名 (支持申请通配域名)
Email Address: info@season.com                   | 填写证书申请人的邮箱地址

--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 使用 PCA 服务签署 CSR 申请文件, 并颁发证书
[root ~]# openssl ca -selfsign -in /etc/nginx/conf/cert.d/repo.season.com.csr -out /etc/nginx/conf/cert.d/repo.season.com.pem
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
静态资源站点
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
静态资源站点使用 NginX 软件的自带配置项即可实现, 其典型的应用情境有 YUM 资源站点/ PIP 资源站点/ PDF 文件站点
静态资源站点会把主机的文件系统映射到网络层, 访问静态资源站点的请求路由, 应当符合文件系统的目录结构设计, 否则无法抵达资源位置

静态资源站点在设计目录结构时, 建议遵守下述基本规则:

    •  隐藏静态资源站点的根目录, 同时禁止客户端请求访问静态资源站点的根目录
    •  严格管理静态资源站点的代理名称, 隐藏静态资源站点的 IPv4 地址, 同时禁止客户端请求基于 IPv4 地址与非法域名访问静态资源站点
    •  条件允许时, 为静态资源站点配置 SSL 加密证书, 并引导客户端请求使用 HTTPS 协议访问静态资源站点









