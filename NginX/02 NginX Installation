 , _                    _             _                       _   _                           
/|/ \        o         (_\  /        | |                     | | | |          o               
 |   |   __,     _  _     \/         | | _  _    , _|_  __,  | | | |  __, _|_     __   _  _   
 |   |  /  | |  / |/ |    /\       _ |/ / |/ |  / \_|  /  |  |/  |/  /  |  |  |  /  \_/ |/ |  
 |   |_/\_/|/|_/  |  |_/_/  \_/    \_/\/  |  |_/ \/ |_/\_/|_/|__/|__/\_/|_/|_/|_/\__/   |  |_/
          /|                                                                                  
          \|                                                                                  
--  This document was created by Xuanming in 2022, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
NginX 软件的源码编译
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
NginX 软件的安装途经有:

    •  使用 YUM 源直接安装
    •  使用 RPM 包直接安装
    •  使用源码安装 (优先推荐使用源码安装), 源码的 TGZ 压缩包可以基于 GitHub/ NGINX 社区站点下载
       •  https://github.com/nginx/nginx/releases
       •  https://www.nginx.org/en/download.html

NginX 软件的源码编译选项有
┌────────────────────┬───────────────────────────┬─────────────────────────────────────────────────────────────────────
│ Parameter Name     │ Default Value             │ Comment
├────────────────────┼───────────────────────────┼─────────────────────────────────────────────────────────────────────
│ --prefix=          │ /usr/local/nginx          │ 指定 NginX 软件的基目录的位置
│ --sbin-path=       │ $prefix/sbin/nginx        │ 指定 NginX 软件的可执行文件的位置
│ --conf-path=       │ $prefix/conf/nginx.conf   │ 指定 NginX 软件的配置文件的位置
│ --pid-path=        │ $prefix/logs/nginx.pid    │ 指定 NginX 软件的进程文件的位置
│ --error-log-path=  │ $prefix/logs/error.log    │ 指定 NginX 软件的错误日志文件的位置
│ --http-log-path=   │ $prefix/logs/access.log   │ 指定 NginX 软件的访问日志文件的位置
│ --lock-path=       │ $prefix/logs/nginx.lock   │ 指定 NginX 软件的服务锁定文件的位置
│ --add-module=      │ /path/to/module           │ 指定 NginX 软件编译时, 需要额外编译到软件中的, 由第三方社区发布的功能模块
│ --user=            │ USERNAME                  │ 指定 NginX 软件的工作进程的所属用户
│ --group=           │ GPNAME                    │ 指定 NginX 软件的工作进程的所属群组
│ --with-debug       │                           │ 启用 NginX 软件的调试日志
│ --with-ipv6        │                           │ 启用 NginX 软件支持 IPv6 通信地址
└────────────────────┴───────────────────────────┴─────────────────────────────────────────────────────────────────────

NginX 软件的编译过程中, 可以使用下述参数停用默认会被 NginX 软件启用的 HTTP 功能模块
**  --without-http_charset_module
**  --without-http_gzip_module
**  --without-http_ssi_module
**  --without-http_userid_module
**  --without-http_access_module
**  --without-http_autoindex_module
**  --without-http_geo_module
**  --without-http_map_module
**  --without-http_referer_module
**  --without-http_rewrite_module
**  --without-http_proxy_module
**  --without-http_fastcgi_module
**  --without-http_uwsgi_module
**  --without-http_scgi_module
**  --without-http_memcached_module
**  --without-http_limit_conn_module
**  --without-http_limit_req_module
**  --without-http_empty_gif_module
**  --without-http_browser_module
**  --without-http_upstream_ip_hash_module
**  --without-http_upstream_least_conn_module
**  --without-http_split_clients_module

NginX 软件的编译过程中, 可以使用下述参数启用默认会被 NginX 软件停用的 HTTP 功能模块
**  --with-http_ssl_module                       | 该模块能够提供 HTTPS 服务, 其底层依赖 OpenSSL 软件包
**  --with-http_realip_module                    | 该模块能够基于请求头获取客户端的真实地址 (X-Forwarded-For 关键字)
**  --with-http_addition_module                  | 该模块能够管理请求头的字符串内容
**  --with-http_xslt_module                      | 该模块用于给服务端响应数据添加 XML 渲染
**  --with-http_sub_module                       | 该模块能够管理请求体的字符串内容
**  --with-http_dav_module                       | 该模块能够支持 WebDav 协议
**  --with-http_flv_module                       | 该模块用于给服务端响应数据处理 FLV 格式的视频文件
**  --with-http_mp4_module                       | 该模块用于给服务端响应数据处理 MP4 格式的视频文件
**  --with-http_gzip_static_module               | 该模块能够避免服务端重复使用 GZIP 格式压缩静态资源文件 (减轻 CPU 负载压力)
**  --with-http_random_index_module              | 该模块能够提供特定目录下的随机响应服务
**  --with-http_secure_link_module               | 该模块用于验证请求附带的令牌信息 (token) 是否过期
**  --with-http_stub_status_module               | 该模块用于提供 NginX 软件的管理控制台功能
**  --with-http_spdy_module                      | 该模块能够支持 SPDY 协议
**  --with-http_gunzip_module                    | 该模块仍是 HTTP_GZIP_MODULE 的扩展功能模块, 提供 GZIP 格式压缩的过滤器
**  --with-http_auth_request_module              | 该模块用于支持 LDAP 统一用户认证体系



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
NginX 软件的源码安装
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
NginX 软件的源码安装




