  ___               _                                                
 / (_)             | | o                             o               
|      __   _  _   | |     __,         ,_    __, _|_     __   _  _   
|     /  \_/ |/ |  |/  |  /  | |   |  /  |  /  |  |  |  /  \_/ |/ |  
 \___/\__/   |  |_/|__/|_/\_/|/ \_/|_/   |_/\_/|_/|_/|_/\__/   |  |_/
                   |\       /|                                       
                   |/       \|                                       
--  This document was created by Xuanming in 2023, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的主配置文件
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的主配置文件为 /path/to/zoo.cfg
ZooKeeper 软件的主配置文件有基本配置/ 高级配置/ 集群配置在内的三种配置项类型, 前者是必要的配置项, 后者是可选的配置项
ZooKeeper 软件的主配置文件可参考 [ https://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_configuration ]

ZooKeeper 软件的主配置文件常用配置项如下
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Configuration                                  │ Default │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ clientPort=NUM                                 │         │ 基本配置项, 设置软件监听 NUM 端口用于接受业务客户端的请求
│ dataDir=/PATH/TO/DIR                           │         │ 基本配置项, 设置软件的数据存储目录为 /PATH/TO/DIR
│ tickTime=3000                                  │    √    │ 基本配置项, 设置软件的每个时间单元为 3000 毫秒
│ tickTime=NUM                                   │         │ 基本配置项, 设置软件的每个时间单元为 NUM 毫秒
│ dataLogDir=${dataDir}                          │    √    │ 设置软件的事务日志文件统一存储到数据存储目录 (官方不提倡)
│ dataLogDir=/PATH/TO/DIR                        │         │ 设置软件的事务日志文件存储目录为 /PATH/TO/DIR
│ initLimit=10                                   │    √    │ 设置主从实例之间同步数据的时间长度为 10 个时间单元
│ initLimit=NUM                                  │         │ 设置主从实例之间同步数据的时间长度为 NUM 个时间单元
│ syncLimit=5                                    │    √    │ 设置主从实例之间心跳检查的超时长度为 5 个时间单元
│ syncLimit=NUM                                  │         │ 设置主从实例之间心跳检查的超时长度为 NUM 个时间单元
│ snapCount=100000                               │    √    │ 设置两份数据快照文件之间最多允许存在 100000 个事务
│ snapCount=NUM                                  │         │ 设置两份数据快照文件之间最多允许存在 NUM 个事务
│ preAllocSize=65536                             │    √    │ 设置每份事务日志文件的容量为 65536kb (64mb)
│ preAllocSize=NUM                               │         │ 设置每份事务日志文件的容量为 NUMkb
│ minSessionTimeout=2                            │    √    │ 要求业务客户端连接设置的会话超时时间不得小于 2 个时间单元
│ minSessionTimeout=NUM                          │         │ 要求业务客户端连接设置的会话超时时间不得小于 NUM 个时间单元
│ maxSessionTimeout=20                           │    √    │ 要求业务客户端连接设置的会话超时时间不得大于 20 个时间单元
│ maxSessionTimeout=NUM                          │         │ 要求业务客户端连接设置的会话超时时间不得大于 NUM 个时间单元
│ maxClientCnxns=60                              │    √    │ 设置业务客户端连接的最大并发数量为 60 个连接 (IPv4/ IPv6 粒度)
│ maxClientCnxns=NUM                             │         │ 设置业务客户端连接的最大并发数量为 NUM 个连接 (IPv4/ IPv6 粒度)
│ autopurge.snapRetainCount=3                    │    √    │ 要求实例在自动清理数据快照文件时, 仅保存最近 3 份数据快照文件
│ autopurge.snapRetainCount=NUM                  │         │ 要求实例在自动清理数据快照文件时, 仅保存最近 NUM 份数据快照文件
│ autopurge.purgeInterval=0                      │    √    │ 设置实例不自动清理一次数据快照文件
│ autopurge.purgeInterval=NUM                    │         │ 设置实例每间隔 NUM 小时自动清理一次数据快照文件
│ server.ID=HOST:PORT:PORT                       │         │ 集群配置项, 依次设置实例的独立编号/ 主机地址/ 通信端口/ 选举端口
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示 /path/to/zoo.cfg 文件的基本配置
[root ~]# cat /path/to/zoo.cfg
tickTime=1000
initLimit=10
syncLimit=5
dataDir=/var/zookeeper/data
dataLogDir=/var/zookeeper/blog
autopurge.snapRetainCount=3
autopurge.purgeInterval=1
clientPort=2181
maxClientCnxns=9999
server.0=zookeeper-0.season.com:2888:3888
server.1=zookeeper-1.season.com:2888:3888
server.2=zookeeper-2.season.com:2888:3888
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的 Java -D 启动参数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的 Java -D 启动参数通常是可选的高级参数
ZooKeeper 软件的 Java -D 启动参数如下
┌────────────────────────────────────────────────┬─────────┬───────────────────────────────────────────────────────────
│ Configuration                                  │ Default │ Comment
├────────────────────────────────────────────────┼─────────┼───────────────────────────────────────────────────────────
│ -Dzookeeper.preAllocSize=65536                 │    √    │ 要求软件切换事务日志文件时, 为新的事务日志文件分配 65536kb 容量
│ -Dzookeeper.preAllocSize=NUM                   │         │ 要求软件切换事务日志文件时, 为新的事务日志文件分配 NUMkb 容量
│ -Djute.maxbuffer=1048575                       │    √    │ 每个数据节点允许存储 1048575b 大小的数据
│ -Djute.maxbuffer=NUM                           │         │ 每个数据节点允许存储 NUMb 大小的数据
│ -Dfsync.warningthresholdms=1000                │    √    │ 软件切换事务日志文件的耗时超过 1000ms 时, 打印日志记录情况
│ -Dfsync.warningthresholdms=NUM                 │         │ 软件切换事务日志文件的耗时超过 NUMms 时, 打印日志记录情况
│ -Dzookeeper.forceSync=yes                      │    √    │ 要求软件提交事务时, 强制把事务日志写入磁盘 (规避数据丢失风险)
│ -Dzookeeper.forceSync=no                       │         │ 允许软件提交事务时, 不用把事务日志写入磁盘 (提高软件性能)
│ -Dzookeeper.globalOutstandingLimit=1000        │    √    │ 软件允许最多 1000 个请求堆积
│ -Dzookeeper.globalOutstandingLimit=NUM         │         │ 软件允许最多 NUM 个请求堆积
│ -Dzookeeper.leaderServes=yes                   │    √    │ 要求分布式集群的领导者节点参与处理客户端的业务请求
│ -Dzookeeper.leaderServes=no                    │         │ 允许分布式集群的领导者节点无需处理客户端的业务请求
│ -Dzookeeper.skipACL=no                         │    √    │ 软件层面开启 ACL 权限检查
│ -Dzookeeper.skipACL=yes                        │         │ 软件层面关闭 ACL 权限检查
│ -Dzookeeper.cnxTimeout=5000                    │    √    │ 分布式集群的领导者选举阶段, 节点间 TCP 连接握手超时时间为 5000ms
│ -Dzookeeper.cnxTimeout=NUM                     │         │ 分布式集群的领导者选举阶段, 节点间 TCP 连接握手超时时间为 NUMms
└────────────────────────────────────────────────┴─────────┴───────────────────────────────────────────────────────────

""""""""" 演示 Java -D 启动参数的基本用法
[root ~]# cat /usr/share/zookeeper/bin/zkServer.sh
... ...
... ...
nohup "$JAVA" $ZOO_DATADIR_AUTOCREATE "-Dzookeeper.log.dir=$ZOO_LOG_DIR" "-Dzookeeper.log.file=$ZOO_LOG_FILE" \
                                      "-Dzookeeper.preAllocSize=8192" \
                                      "-Dzookeeper.leaderServes=no" \
              -XX:+HeapDumpOnOutOfMemoryError -XX:OnOutOfMemoryError='kill -9 %p' \
              -cp "$CLASSPATH" $JVMFLAGS $ZOOMAIN "$ZOOCFG" > "$_ZOODAEMON_OUT" 2>&1 < /dev/null &
... ...
... ...
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的 JMX 配置
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件在 v3.3.0 版本添加 JMX (Java Management Extension) 插件
ZooKeeper 软件的 JMX 插件能够为应用/ 设备植入扩展管理功能, 使得外界 (JConsole) 获取软件的进程运行数据

/usr/share/zookeeper/bin/zkServer.sh
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZOOMAIN="-Dcom.sun.management.jmxremote
         -Dcom.sun.management.jmxremote.local.only=$JMXLOCALONLY
         org.apache.zookeeper.server.quorum.QuorumPeerMain" (53)

阅读上述配置时, 还请注意:

    •  软件默认关闭 JMX 端口
    •  软件如果开启 JMX 端口, 并开放远程访问时, 需要添加下述配置:
        •  -Djava.rmi.server.hostname=HOSTNAME
        •  -Dcom.sun.management.jmxremote.port=PORT
        •  -Dcom.sun.management.jmxremote.ssl=false
        •  -Dcom.sun.management.jmxremote.authenticate=false

""""""""" 演示 JMX 配置的开启办法
[root ~]# cat /usr/share/zookeeper/bin/zkServer.sh
... ...
... ...
ZOOMAIN="-Djava.rmi.server.hostname=172.16.0.100
         -Dcom.sun.management.jmxremote.port=2182
         -Dcom.sun.management.jmxremote.ssl=false
         -Dcom.sun.management.jmxremote.authenticate=false
         org.apache.zookeeper.server.quorum.QuorumPeerMain" (53)
... ...
... ...
--------------------------------------------------------------------------------------------------------------------- ✻



