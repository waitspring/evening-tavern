  ___,                                                                       
 /   |     |             o          o                        o               
|    |   __|   _  _  _       _  _       , _|_  ,_    __, _|_     __   _  _   
|    |  /  |  / |/ |/ |  |  / |/ |  |  / \_|  /  |  /  |  |  |  /  \_/ |/ |  
 \__/\_/\_/|_/  |  |  |_/|_/  |  |_/|_/ \/ |_/   |_/\_/|_/|_/|_/\__/   |  |_/
                                                                             
                                                                             
--  This document was created by Xuanming in 2023, thanks for your reading



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的实用工具
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的实用工具有:

    •  zkEnv      --  软件的变量管理脚本, 作为其他脚本的底层依赖文件 (人工不直接使用)
    •  zkServer   --  软件的服务管理脚本, 能够启动/ 关闭服务实例
    •  zkCleanup  --  软件的快照清理脚本, 能够清理服务实例的事务日志文件与数据快照文件
    •  zkCli      --  软件的数据管理脚本, 能够管理服务实例内部寄存的目录树及其数据节点

zkServer [--config /path/to/dir] command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
zkServer 工具是软件的服务管理脚本, 能够启动/ 关闭服务实例
zkServer 工具默认加载 /path/to/zookeeper/conf/zoo.cfg 配置文件, 使用可选选项 --config /path/to/dir 能够定向加载其他配置文件
zkServer 工具常用的管理命令有
::  start                                        启动服务实例
::  stop                                         关闭服务实例
::  restart                                      重启服务实例
::  status                                       查看服务实例的运行状态
::  version                                      查看软件版本

""""""""" 演示 zkServer 工具的使用办法
[root ~]# /usr/local/zookeeper/bin/zkServer.sh --config /etc/zookeeper version

JMX enabled by default
Using config: /etc/zookeeper/zoo.cfg
Apache ZooKeeper version 3.8.2 2023-07-05 19:24 UTC

[root ~]# /usr/local/zookeeper/bin/zkServer.sh --config /etc/zookeeper start
[root ~]# /usr/local/zookeeper/bin/zkServer.sh --config /etc/zookeeper status
[root ~]# /usr/local/zookeeper/bin/zkServer.sh --config /etc/zookeeper restart
[root ~]# /usr/local/zookeeper/bin/zkServer.sh --config /etc/zookeeper stop
--------------------------------------------------------------------------------------------------------------------- ✻

zkCleanup [--config /path/to/dir] -n num
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
zkCleanup 工具是软件的快照清理脚本, 能够清理服务实例的事务日志文件与数据快照文件
zkCleanup 工具默认加载 /path/to/zookeeper/conf/zoo.cfg 配置文件, 使用可选选项 --config /path/to/dir 能够定向加载其他配置文件
zkCleanup 工具默认基于配置文件内的 dataDir 配置项确定文件删除对象, 直至保留 num (num ≥ 3) 份最新的事务日志文件与数据快照文件

""""""""" 演示 zkClean 工具的使用办法
[root ~]# ls -l /var/zookeeper/data/version-2/snapshot.*
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:20 snapshot.0
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:25 snapshot.100000000
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:30 snapshot.200000000
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:35 snapshot.300000000
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:40 snapshot.400000000
-rw-r--r-- 1 zookeeper zookeeper  598  7 2 19:45 snapshot.500000000
[root ~]# /usr/local/zookeeper/bin/zkCleanup.sh --config /etc/zookeeper -n 3
Removing file: Sep 2 2023 19:30:19 PM  /var/zookeeper/data/version-2/snapshot.200000000
Removing file: Sep 2 2023 19:25:07 PM  /var/zookeeper/data/version-2/snapshot.100000000
Removing file: Sep 2 2023 19:20:38 PM  /var/zookeeper/data/version-2/snapshot.0
--------------------------------------------------------------------------------------------------------------------- ✻

zkCli [--config /path/to/dir] [-server host:port] command
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
zkCli 工具是软件的数据管理脚本, 能够管理服务实例内部寄存的目录树及其数据节点
zkCli 工具默认加载 /path/to/zookeeper/conf/zoo.cfg 配置文件, 使用可选选项 --config /path/to/dir 能够定向加载其他配置文件
zkCli 工具默认连接到当前主机的服务实例 (localhost:2181), 使用可选选项 -server host:port 能够定向连接其他服务实例
zkCli 工具提供给用户的操作指令有
::  connect host:port                            连接到服务实例 host:port
::  close                                        关闭服务实例连接
::  create [-s] [-e] path [data]                 创建一个持久节点, 使用 -s 选项创建有序节点, 使用 -e 选项创建临时节点
::  delete path                                  删除一个数据节点 (要求被删除的数据节点没有下属子节点)
::  deleteall path                               删除一个数据节点及其下属子节点
::  set path data                                设置一个数据节点的数据内容
::  get [-s] [-w] path                           读取一个数据节点的数据内容
                                                 使用 -s 选项读取数据节点的元数据, 使用 -w 选项为数据节点添加一个监视器
::  stat [-w] path                               读取一个数据节点的元数据, 使用 -w 选项为数据节点添加一个监视器
::  getAllChildrenNumber path                    统计一个数据节点的下属子节点数量
::  getEphemerals                                读取当前用户会话的全部临时节点
::  ls [-s] [-w] [-R] path                       读取指定数据节点的子节点 (树状结构查阅命令)
                                                 使用 -s 选项读取数据节点的元数据, 使用 -w 选项为数据节点添加一个监视器
                                                 使用 -R 选项递归读取全部子节点
::  removewatches path                           删除一个数据节点的监视器
::  addWatch path                                添加一个监视器到指定的数据节点
::  history                                      查阅当前用户会话的历史命令
::  redo cmdno                                   执行当前用户会话内编号为 cmdno 的历史命令
::  sync path                                    人工触发主从实例间的业务数据同步
::  whoami                                       查阅当前用户会话的信息
::  version                                      查阅 zkCli 工具的版本信息
::  quit                                         退出 zkCli 工具的执行环境

""""""""" 使用 zkCli 工具创建数据节点
[zk:  0]# create /foo                            | 创建一个未存储数据内容的持久节点
[zk:  1]# create -e /foo                         | 创建一个未存储数据内容的临时节点
[zk:  2]# create -s /foo foo                     | 创建一个存储有数据内容的持久有序节点
[zk:  3]# create -s -e /foo foo                  | 创建一个存储有数据内容的临时有序节点
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 使用 zkCli 工具设置/ 读取/ 删除数据节点
[zk:  0]# get /foo/demo                          | 读取一个数据节点的数据内容
[zk:  1]# get -s /foo/demo                       | 读取一个数据节点的数据内容及其元数据
[zk:  2]# get -s -w /foo/demo                    | 读取一个数据节点的数据内容及其元数据, 并为数据节点添加一个监视器
[zk:  3]# set /foo/demo demo                     | 设置一个数据节点的数据内容
WatchedEvent type:NodeDataChanged path:/foo/demo | 监视器检测到数据节点发生内容变动, 向控制台抛出提示信息
[zk:  4]# delete /foo                            | 删除一个数据节点
Node not empty: /foo                             | 删除失败: 数据节点仍有下属子节点
[zk:  5]# deleteall /foo                         | 删除一个数据节点及其下属子节点
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 使用 zkCli 工具读取数据节点的子节点
[zk:  0]# ls /zookeeper
[zk:  1]# ls -s /zookeeper
[zk:  2]# ls -R /zookeeper
/zookeeper
/zookeeper/config
/zookeeper/quota
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 使用 zkCli 工具管理数据节点
[root ~]# /usr/local/zookeeper/bin/zkCli.sh --config /etc/zookeeper create /foo foo
[root ~]# /usr/local/zookeeper/bin/zkCli.sh --config /etc/zookeeper ls -R /foo
[root ~]# /usr/local/zookeeper/bin/zkCli.sh --config /etc/zookeeper set /foo demo
[root ~]# /usr/local/zookeeper/bin/zkCli.sh --config /etc/zookeeper stat /foo
--------------------------------------------------------------------------------------------------------------------- ✻



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的四字命令
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ZooKeeper 软件的四字命令指一批 4 个字符长度的 TCP 协议指令
ZooKeeper 软件的四字命令通常搭配命令行的 telnet/ nc 命令一起使用 (telnet/ nc 命令负责建立 TCP 连接, 四字命令执行具体步骤):

    •  $ telnet host:port >>>> cmd
    •  $ echo cmd | nc host:port (推荐方案)
    •  配置文件 /etc/zookeeper/zoo.cfg 内的参数项 4lw.commands.whitelist=cmd,... 用于设置四字命令的执行白名单
       软件默认不放行四字命令, 而使用 4lw.commands.whitelist=* 可以通配放行全部四字命令

ZooKeeper 软件的四字命令有:

    •  conf  --  查阅服务实例的全部运行参数
    •  cons  --  查阅服务实例上全部用户会话的统计信息
    •  crst  --  重置服务实例上全部用户会话的统计信息
    •  dump  --  查阅分布式集群上全部用户会话的详细信息
    •  envi  --  查阅服务实例的运行环境信息, 具体有 JDK 版本/ 操作系统内核/ 进程用户/ 内存分配调度
    •  ruok  --  查阅服务实例的简单运行状态, 服务实例运行正常时返回值为 imok, 否则无返回值
    •  stat  --  查阅服务实例的详细运行状态, 包含服务实例的用户会话信息
    •  srvr  --  查阅服务实例的详细运行状态, 不含服务实例的用户会话信息
    •  srst  --  重置分布式集群上全部用户会话的统计信息
    •  wchs  --  查阅服务实例上监视器 (Watcher) 的概要信息
    •  wchc  --  查阅服务实例上监视器 (Watcher) 的详细信息 (使用监视器单位分组信息)
    •  wchp  --  查阅服务实例上监视器 (Watcher) 的详细信息 (使用数据节点单位分组信息)
    •  mntr  --  查阅服务实例的详细运行状态 (面向监控设计的内容反馈机制)

""""""""" 使用 conf/cons/crst 四字命令
[root ~]# echo conf | nc zookeeper-0.season.com 2181
clientPort=2181
secureClientPort=-1
dataDir=/var/zookeeper/data/version-2
dataDirSize=67109510
dataLogDir=/var/zookeeper/data/version-2
dataLogSize=67109510
tickTime=1000
maxClientCnxns=9999
minSessionTimeout=2000
maxSessionTimeout=20000
clientPortListenBacklog=-1
serverId=0
initLimit=10
syncLimit=5
electionAlg=3
electionPort=3888
quorumPort=2888
peerType=0
membership:
server.0=zookeeper-0.season.com:2888:3888:participant
server.1=zookeeper-1.season.com:2888:3888:participant
server.2=zookeeper-2.season.com:2888:3888:participant
[root ~]# echo cons | nc zookeeper-0.season.com 2181
/zookeeper-0.season.com:57028[0] (queue=0, recved=1, sent=0)
[root ~]# echo crst | nc zookeeper-0.season.com 2181
--------------------------------------------------------------------------------------------------------------------- ✻

""""""""" 使用 ruok/ stat/ srvr/ mntr 四字命令
[root ~]# echo ruok | nc zookeeper-0.season.com 2181
[root ~]# echo stat | nc zookeeper-0.season.com 2181
Clients:
/zookeeper-0.season.com:57028[0] (queue=0, recved=1, sent=0)
Latency min/avg/max: 0/0.0/0
Received: 7
Sent: 6
Connections: 1
Outstanding: 0
Zxid: 0x20000001c
Mode: follower
Node count: 10
[root ~]# echo srvr | nc zookeeper-0.season.com 2181
[root ~]# echo mntr | nc zookeeper-0.season.com 2181
--------------------------------------------------------------------------------------------------------------------- ✻



